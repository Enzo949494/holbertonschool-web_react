/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!********************!*\
  !*** ./js/main.ts ***!
  \********************/

// Create two student objects
var student1 = {
    firstName: "John",
    lastName: "Doe",
    age: 20,
    location: "New York"
};
var student2 = {
    firstName: "Jane",
    lastName: "Smith",
    age: 22,
    location: "San Francisco"
};
// Store students in an array
var studentsList = [student1, student2];
// Render table function
var renderTable = function (students) {
    // Create table element
    var table = document.createElement('table');
    var tableBody = document.createElement('tbody');
    // Create header row
    var headerRow = document.createElement('tr');
    var firstNameHeader = document.createElement('th');
    var locationHeader = document.createElement('th');
    firstNameHeader.textContent = 'First Name';
    locationHeader.textContent = 'Location';
    headerRow.appendChild(firstNameHeader);
    headerRow.appendChild(locationHeader);
    tableBody.appendChild(headerRow);
    // Create a row for each student
    students.forEach(function (student) {
        var row = document.createElement('tr');
        var firstNameCell = document.createElement('td');
        var locationCell = document.createElement('td');
        firstNameCell.textContent = student.firstName;
        locationCell.textContent = student.location;
        row.appendChild(firstNameCell);
        row.appendChild(locationCell);
        tableBody.appendChild(row);
    });
    // Append table body to table
    table.appendChild(tableBody);
    // Append table to the document body
    document.body.appendChild(table);
};
// Render the table when DOM content is loaded
document.addEventListener('DOMContentLoaded', function () {
    renderTable(studentsList);
});

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQVFBLDZCQUE2QjtBQUM3QixJQUFNLFFBQVEsR0FBWTtJQUN4QixTQUFTLEVBQUUsTUFBTTtJQUNqQixRQUFRLEVBQUUsS0FBSztJQUNmLEdBQUcsRUFBRSxFQUFFO0lBQ1AsUUFBUSxFQUFFLFVBQVU7Q0FDckIsQ0FBQztBQUVGLElBQU0sUUFBUSxHQUFZO0lBQ3hCLFNBQVMsRUFBRSxNQUFNO0lBQ2pCLFFBQVEsRUFBRSxPQUFPO0lBQ2pCLEdBQUcsRUFBRSxFQUFFO0lBQ1AsUUFBUSxFQUFFLGVBQWU7Q0FDMUIsQ0FBQztBQUVGLDZCQUE2QjtBQUM3QixJQUFNLFlBQVksR0FBbUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFMUQsd0JBQXdCO0FBQ3hCLElBQU0sV0FBVyxHQUFHLFVBQUMsUUFBd0I7SUFDM0MsdUJBQXVCO0lBQ3ZCLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUMsSUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVsRCxvQkFBb0I7SUFDcEIsSUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQyxJQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JELElBQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFcEQsZUFBZSxDQUFDLFdBQVcsR0FBRyxZQUFZLENBQUM7SUFDM0MsY0FBYyxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7SUFFeEMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN2QyxTQUFTLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLFNBQVMsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFakMsZ0NBQWdDO0lBQ2hDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQyxPQUFPO1FBQ3ZCLElBQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuRCxJQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWxELGFBQWEsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUM5QyxZQUFZLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFFNUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvQixHQUFHLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlCLFNBQVMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDLENBQUM7SUFFSCw2QkFBNkI7SUFDN0IsS0FBSyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QixvQ0FBb0M7SUFDcEMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDO0FBRUYsOENBQThDO0FBQzlDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRTtJQUM1QyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBlc2NyaXB0X2RlcGVuZGVuY2llcy8uL2pzL21haW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVmaW5lIHRoZSBTdHVkZW50IGludGVyZmFjZVxuaW50ZXJmYWNlIFN0dWRlbnQge1xuICBmaXJzdE5hbWU6IHN0cmluZztcbiAgbGFzdE5hbWU6IHN0cmluZztcbiAgYWdlOiBudW1iZXI7XG4gIGxvY2F0aW9uOiBzdHJpbmc7XG59XG5cbi8vIENyZWF0ZSB0d28gc3R1ZGVudCBvYmplY3RzXG5jb25zdCBzdHVkZW50MTogU3R1ZGVudCA9IHtcbiAgZmlyc3ROYW1lOiBcIkpvaG5cIixcbiAgbGFzdE5hbWU6IFwiRG9lXCIsXG4gIGFnZTogMjAsXG4gIGxvY2F0aW9uOiBcIk5ldyBZb3JrXCJcbn07XG5cbmNvbnN0IHN0dWRlbnQyOiBTdHVkZW50ID0ge1xuICBmaXJzdE5hbWU6IFwiSmFuZVwiLFxuICBsYXN0TmFtZTogXCJTbWl0aFwiLFxuICBhZ2U6IDIyLFxuICBsb2NhdGlvbjogXCJTYW4gRnJhbmNpc2NvXCJcbn07XG5cbi8vIFN0b3JlIHN0dWRlbnRzIGluIGFuIGFycmF5XG5jb25zdCBzdHVkZW50c0xpc3Q6IEFycmF5PFN0dWRlbnQ+ID0gW3N0dWRlbnQxLCBzdHVkZW50Ml07XG5cbi8vIFJlbmRlciB0YWJsZSBmdW5jdGlvblxuY29uc3QgcmVuZGVyVGFibGUgPSAoc3R1ZGVudHM6IEFycmF5PFN0dWRlbnQ+KTogdm9pZCA9PiB7XG4gIC8vIENyZWF0ZSB0YWJsZSBlbGVtZW50XG4gIGNvbnN0IHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGFibGUnKTtcbiAgY29uc3QgdGFibGVCb2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGJvZHknKTtcbiAgXG4gIC8vIENyZWF0ZSBoZWFkZXIgcm93XG4gIGNvbnN0IGhlYWRlclJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7XG4gIGNvbnN0IGZpcnN0TmFtZUhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gIGNvbnN0IGxvY2F0aW9uSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGgnKTtcbiAgXG4gIGZpcnN0TmFtZUhlYWRlci50ZXh0Q29udGVudCA9ICdGaXJzdCBOYW1lJztcbiAgbG9jYXRpb25IZWFkZXIudGV4dENvbnRlbnQgPSAnTG9jYXRpb24nO1xuICBcbiAgaGVhZGVyUm93LmFwcGVuZENoaWxkKGZpcnN0TmFtZUhlYWRlcik7XG4gIGhlYWRlclJvdy5hcHBlbmRDaGlsZChsb2NhdGlvbkhlYWRlcik7XG4gIHRhYmxlQm9keS5hcHBlbmRDaGlsZChoZWFkZXJSb3cpO1xuICBcbiAgLy8gQ3JlYXRlIGEgcm93IGZvciBlYWNoIHN0dWRlbnRcbiAgc3R1ZGVudHMuZm9yRWFjaCgoc3R1ZGVudCkgPT4ge1xuICAgIGNvbnN0IHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7XG4gICAgY29uc3QgZmlyc3ROYW1lQ2VsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgY29uc3QgbG9jYXRpb25DZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICBcbiAgICBmaXJzdE5hbWVDZWxsLnRleHRDb250ZW50ID0gc3R1ZGVudC5maXJzdE5hbWU7XG4gICAgbG9jYXRpb25DZWxsLnRleHRDb250ZW50ID0gc3R1ZGVudC5sb2NhdGlvbjtcbiAgICBcbiAgICByb3cuYXBwZW5kQ2hpbGQoZmlyc3ROYW1lQ2VsbCk7XG4gICAgcm93LmFwcGVuZENoaWxkKGxvY2F0aW9uQ2VsbCk7XG4gICAgdGFibGVCb2R5LmFwcGVuZENoaWxkKHJvdyk7XG4gIH0pO1xuICBcbiAgLy8gQXBwZW5kIHRhYmxlIGJvZHkgdG8gdGFibGVcbiAgdGFibGUuYXBwZW5kQ2hpbGQodGFibGVCb2R5KTtcbiAgLy8gQXBwZW5kIHRhYmxlIHRvIHRoZSBkb2N1bWVudCBib2R5XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGFibGUpO1xufTtcblxuLy8gUmVuZGVyIHRoZSB0YWJsZSB3aGVuIERPTSBjb250ZW50IGlzIGxvYWRlZFxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgcmVuZGVyVGFibGUoc3R1ZGVudHNMaXN0KTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9